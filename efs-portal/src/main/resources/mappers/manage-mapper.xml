<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<!-- 命名规范 1、ID命名以 select_、insert_、update_、delete_ 为前缀，表示节点SQL操作,后面跟表名（首字母大写） 
	2、SQL参数变量列命名统一使用小写，在JAVA代码中请使用NewHashMap对象进行传值，NewHashMap类可忽略Map的KEY大小写 3、SQL返回字段列命名统一返回大写，返回类型统一使用NewHashMap或MyCachedRowSet，在JAVA代码中请使用小写访问MAP的KEY 
	4、单表的delete和update语句的WHERE关键字不允许根据条件动态生成，避免不带条件误执行 5、单表的select和insert语句根据传入参数动态生成 
	6、业务处理相关SQL命名以表达意义的多个单词(首字母大写)拼写，不带前缀,和单表SQLID区分开 -->
<mapper namespace="com.efuture.portal.dao.db.one.ManageDao">
	
	<select id="getCompanyInfo" parameterType="Map" resultType="NewHashMap">
		select companyid,companytype,companyname,shortname,address,companytel,contacttel,email,fax,taxno,industries,legalperson,depositbank,bankno,intime 
		from company
	</select>
	
	<select id="getLoginInfo" parameterType="Map" resultType="NewHashMap">
		select loginid,logintype,username,idcard,kpd,jpzz,contacttel,isstop,logintimes,note 
		from login where companyid=#{companyid}
		<if test="userid != null and userid !=''">
			and loginid =#{userid}
		</if>
		<if test="username != null and username !=''">
			and username like CONCAT('%',#{username},'%') 
		</if>
	</select>
	
	<select id="getCompanyLoginInfo" parameterType="Map" resultType="NewHashMap">
		select a.loginid,a.password,a.logintype,a.username,a.idcard,a.kpd,a.contacttel,a.isstop,a.logintimes,a.note,b.companyid,b.companyname 
		from login a,company b where a.companyid=b.companyid and a.logintype=1
	</select>
	
	<select id="getShopInfo" parameterType="Map" resultType="NewHashMap">
		<![CDATA[
			select area,shopid,shopname,shoptype,note from shop where companyid=#{companyid} and shopid<>'XXXX'
		]]>
			<if test="shopid != null and shopid !=''">
				and ( shopid like CONCAT('%',#{shopid},'%') or shopname like CONCAT('%',#{shopid},'%'))
			</if>
	</select>
	<select id="getShopInfoByReqest" parameterType="NewHashMap" resultType="NewHashMap">
		<![CDATA[
			select area,shopid,shopname,shoptype,note from shop where companyid=#{companyid} and shopid<>'XXXX'
		]]>
		<if test="reqshop != null and reqshop !=''">
			and (shopid=#{reqshop} or shopname like CONCAT('%',#{reqshop},'%') ) 
		</if>
	</select>
	<select id="getRoleInfo" parameterType="Map" resultType="NewHashMap">	
		<![CDATA[	
			select a.roleid,rolename,note,IFNULL(modulecount,0) as modulecount,IFNULL(logincount,0) as logincount
			from role a left join (select RoleID,Count(*) as ModuleCount from role_nx_module group by RoleID) b on a.roleid=b.roleid
			left join (select RoleID,Count(*) as LoginCount from login_nx_role group by RoleID) c on a.roleid=c.roleid
			where companyid=#{companyid} 
		]]>
	</select>	
		
	<select id="getRoleMenuGroup" parameterType="Map" resultType="NewHashMap">		
		select a.menuid,a.menuname,a.note from Menu a,CompanyTypeMenu b,Company c where a.MenuID=b.Menuid and b.Companytype=c.CompanyType and c.CompanyID=#{companyid}			
	</select>
	
	<select id="getRoleMenuModule" parameterType="Map" resultType="NewHashMap">				
		select x.moduleid,x.modulename,x.menuid,x.note from module x,Menu a,CompanyTypeMenu b,Company c 
		where a.MenuID=b.Menuid and b.Companytype=c.CompanyType and x.menuid=a.menuid 
		and x.enable=1 and c.CompanyID=#{companyid}		
	</select>
	
	<select id="getRoleModule" parameterType="Map" resultType="NewHashMap">						
		select * from role_nx_module a,module b where a.moduleid=b.moduleid
		and b.enable=1 and a.roleid=#{roleid}
	</select>		
	
	<delete id="deleteRoleModule" parameterType="NewHashMap" >	
		delete from role_nx_module where roleid=#{roleid}
	</delete>	
	
	<delete id="deleteLoginRole" parameterType="NewHashMap" >	
		delete from login_nx_role where companyid=#{companyid} and loginid=#{loginid}
	</delete>	
	
	<delete id="deleteLoginShop" parameterType="NewHashMap" >	
		delete from login_nx_shop where companyid=#{companyid} and loginid=#{loginid}
	</delete>	
	
	<insert id="intoRoleModule" parameterType="NewHashMap" >
		insert into role_nx_module
			(roleid,moduleid)
		values(#{roleid},#{moduleid})
	</insert>
	
	<insert id="intoLoginRole" parameterType="NewHashMap" >
		insert into login_nx_role
			(companyid,loginid,roleid)
		values(#{companyid},#{loginid},#{roleid})
	</insert>
	
	<insert id="intoLoginShop" parameterType="NewHashMap" >
		replace into login_nx_shop
			(companyid,loginid,shopid)
		values(#{companyid},#{loginid},#{shopid})
	</insert>
	
	<insert id="intoQuyuShop" parameterType="NewHashMap" >
		insert into userarea
			(companyid,userid,areaid)
		values(#{companyid},#{loginid},#{shopid})
	</insert>		
	
	<select id="getLoginRolePower" parameterType="Map" resultType="NewHashMap">				
		select roleid from login_nx_role where companyid=#{companyid} and loginid=#{loginid}
	</select>
	
	<select id="getLoginShopPower" parameterType="Map" resultType="NewHashMap">				
		select shopid from login_nx_shop where companyid=#{companyid} and loginid=#{loginid}
	</select>
	
	
	<select id="getAreaInfo" parameterType="Map" resultType="NewHashMap">		
		<![CDATA[
			select '所有机构'	 as area				
			union				
			select distinct area from shop
			where area is not null and area<>''			
		]]>
	</select>	
	
	<insert id="intoCompany" parameterType="NewHashMap">
		insert into company
			(companytype,companyname,shortname,address,companytel,contacttel,email,fax,taxno,industries,legalperson,depositbank,bankno,intime)
		values(#{companytype},#{companyname},#{shortname},#{address},#{companytel},#{contacttel},#{email},#{fax},#{taxno},#{industries},#{legalperson},#{depositbank},#{bankno},now())
	</insert>
	
	<insert id="intoCompanyRole" parameterType="NewHashMap">		
		insert into role
			(companyid,rolename,note)
		values(#{companyid},'企业管理员','默认生成')					
	</insert>
	
	<insert id="newRoleModule" parameterType="NewHashMap">
		<![CDATA[
			insert into role_nx_module
				(roleid,moduleid)
			select distinct a.roleid,b.moduleid from role a,module b,menu c,companytypemenu d,company e where a.companyid=#{companyid} and rolename='企业管理员' and b.SystemModule=1 and b.MenuID<>9
			and b.menuid=c.menuid and c.menuid=d.menuid and a.companyid=e.companyid and d.companytype=e.companytype
		]]>
	</insert>
	
	<insert id="newLoginRole" parameterType="NewHashMap">
		insert into login_nx_role
			(companyid,loginid,roleid)
		select companyid,#{loginid},roleid
		from role where companyid=#{companyid} and rolename='企业管理员'
		limit 1 
	</insert>
	
	<!-- 注册公司时增加默认机构 -->
	<insert id="newShop" parameterType="NewHashMap">		
		insert into shop
			(companyid,shopid,shopname,shoptype,area,note)
		values(#{companyid},'XXXX','企业总部',2,'','默认生成')				
	</insert>
	
	<!-- 注册企业账户的时候默认绑定默认机构 -->
	<insert id="newLoginShop" parameterType="NewHashMap">
		replace into login_nx_shop
			(companyid,loginid,shopid)
		values(#{companyid},#{loginid},'XXXX')		
	</insert>
	
	<select id="getNewCompany" parameterType="Map" resultType="NewHashMap">
		select max(companyid) as companyid from company
	</select>
	
	<select id="getNewMenu" parameterType="Map" resultType="NewHashMap">
		select max(menuid) as menuid from menu where companyid=#{companyid}
	</select>
	
	<select id="checkLoginModule" parameterType="Map" resultType="NewHashMap">
		select distinct c.* from login_nx_role a,role_nx_module b,module c
		where a.roleid=b.roleid and b.moduleid=c.moduleid and a.companyid=#{companyid} and a.loginid=#{loginid} and b.moduleid=#{moduleid}
	</select>
	
	<!-- 注册企业时默认生成菜单 -->
	<insert id="newMenu" parameterType="NewHashMap">
		insert into Menu(CompanyID,MenuName,HeadMenuID,Flag,Note) 
		Values(#{companyid},'权限管理',-1,1,'一级菜单')		
	</insert>
	
	<!-- 注册企业时默认生成模块 -->
	<insert id="newModule" parameterType="NewHashMap">
		insert into Module(CompanyID,ModuleName,MenuID,ENABLE,SystemModule,Note,Url) 
		select #{companyid},'角色管理',#{menuid},1,1,'','module/P700001.html' from dual
		union
		select #{companyid},'机构管理',#{menuid},1,1,'','module/P700002.html' from dual
		union
		select #{companyid},'帐号管理',#{menuid},1,1,'','module/P700003.html' from dual		
	</insert>
	
	<insert id="newLogin" parameterType="NewHashMap">
		insert into login
			(CompanyID,LoginID,PASSWORD,LoginType,UserName,IDCard,ContactTel,IsStop,LoginTimes,Note)
		values(#{companyid},#{loginid},#{password},1,#{username},#{idcard},#{contacttel},0,0,'平台注册')
	</insert>
	
	<insert id="newCompanyPrepay" parameterType="NewHashMap">
		insert into eshopdb.CompanyPrepay(companyid,prepayvalue,totalrechargevalue,totalconsumevalue)
		values(#{companyid},0,0,0);
	</insert>
	
	<insert id="newCompanyPointExConfig" parameterType="NewHashMap">
		insert into eshopdb.CompanyPointExConfig(CompanyID,LotteryExRate,DayQuota,DayTimesLimit,OneQuota,OneDayTimesLimit,SDMRate,UpdateTime)
		values(#{companyid},-1,-1,-1,-1,-1,-1,now());
	</insert>
	
	<insert id="newCompanyRebate" parameterType="NewHashMap">
		insert into eshopdb.CompanyRebate(companyid,rebatevalue,extractionvalue,totalrebatevalue)
		values(#{companyid},0,0,0);
	</insert>
		
	<select id="checkEShopDB" parameterType="Map" resultType="NewHashMap">
		SELECT * FROM information_schema.SCHEMATA where SCHEMA_NAME='eshopdb';
	</select> 
	
	<select id="getUserControl" parameterType="Map" resultType="NewHashMap">
			SELECT a.controlid,b.controlname FROM  role_module_control a,module_control b WHERE a.ControlId=b.ControlId and  a.RoleID=#{roleid}
	</select> 
	
	<select id="getControl" parameterType="Map" resultType="NewHashMap">
			SELECT controlid,controlname FROM  module_control	
	</select> 
	
	
	<delete id="deleteUserControl" parameterType="NewHashMap" >	
		delete from role_module_control where RoleID=${roleid}
	</delete>	
	
	<delete id="intoRoleControl" parameterType="NewHashMap" >	
		insert into  role_module_control(RoleID,ControlId) values(${roleid},${controlid})
	</delete>	
	
						
</mapper>	