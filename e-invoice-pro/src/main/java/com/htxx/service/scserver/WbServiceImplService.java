package com.htxx.service.scserver;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.13
 * 2017-05-15T17:36:25.522+08:00
 * Generated source version: 3.0.13
 * 
 */
@WebServiceClient(name = "WbServiceImplService", 
                  wsdlLocation = "http://localhost:8080/FPGLXT/CXF/WbService?wsdl",
                  targetNamespace = "com.htxx.service") 
public class WbServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("com.htxx.service", "WbServiceImplService");
    public final static QName WbServiceImplPort = new QName("com.htxx.service", "WbServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/FPGLXT/CXF/WbService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WbServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/FPGLXT/CXF/WbService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WbServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WbServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WbServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns WbServiceI
     */
    @WebEndpoint(name = "WbServiceImplPort")
    public WbServiceI getWbServiceImplPort() {
        return super.getPort(WbServiceImplPort, WbServiceI.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WbServiceI
     */
    @WebEndpoint(name = "WbServiceImplPort")
    public WbServiceI getWbServiceImplPort(WebServiceFeature... features) {
        return super.getPort(WbServiceImplPort, WbServiceI.class, features);
    }

}
